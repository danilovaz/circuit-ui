{"version":3,"sources":["/home/travis/build/sumup/circuit-ui/src/components/CloseButton/close-icon.svg","/home/travis/build/sumup/circuit-ui/src/components/CloseButton/CloseButton.js","/home/travis/build/sumup/circuit-ui/src/components/CloseButton/index.js","/home/travis/build/sumup/circuit-ui/src/components/SvgButton/SvgButton.js","/home/travis/build/sumup/circuit-ui/src/components/SvgButton/index.js","/home/travis/build/sumup/circuit-ui/src/components/Tag/Tag.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","close_icon_ref","react_default","a","createElement","close_icon_ref2","d","close_icon_SvgCloseIcon","props","width","height","viewBox","SvgCloseButton","__webpack_require__","p","styled_base_browser_esm","SvgButton","_ref","theme","css","svgKilo","labelBaseStyles","hideVisually","ButtonLabel","CloseButton","_ref2","label","objectWithoutProperties","core_browser_esm","defaultProps","baseStyles","colors","black","size","propTypes","children","PropTypes","element","isRequired","withProps","type","closeButtonStyles","spacings","kilo","closeButtonSelectedStyles","selected","white","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__","DefaultCloseButton","tagStyles","_ref3","borderRadius","mega","textMega","shadowBorder","n300","bit","tagClickableStyles","_ref4","onClick","tagSelectedStyles","_ref5","p500","tagSelectedClickableStyles","_ref6","iconStyles","_ref7","iconSelectedStyles","_ref8","IconContainer","TagElement","Tag","_ref9","icon","onRemove","labelRemoveButton","_home_travis_build_sumup_circuit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_sumup_circuit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/docs-content-components-calendar~docs-content-components-forms~docs-content-components-tag.eeee0538.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"icon-canceled\");\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M6.5,7.21L2.43,11.27a0.5,0.5,0,0,1-.71-0.71L5.79,6.5,1.73,2.43a0.5,0.5,0,0,1,.71-0.71L6.5,5.79l4.07-4.07a0.5,0.5,0,0,1,.71.71L7.21,6.5l4.07,4.07a0.5,0.5,0,0,1-.71.71Z\"\n});\n\nvar SvgCloseIcon = function SvgCloseIcon(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 13,\n    height: 13,\n    viewBox: \"0 0 13 13\"\n  }, props), _ref, _ref2);\n};\n\nexport default __webpack_public_path__ + \"static/img/close-icon.8b7428e3.svg\";\nexport { SvgCloseIcon as ReactComponent };","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { hideVisually } from 'polished';\n\nimport { svgKilo } from '../../styles/style-helpers';\nimport SvgButton from '../SvgButton';\nimport { ReactComponent as Icon } from './close-icon.svg';\n\nconst SvgCloseButton = styled(SvgButton)(\n  ({ theme }) => css`\n    label: close-button;\n    ${svgKilo({ theme })};\n  `\n);\n\nconst labelBaseStyles = () => css`\n  ${hideVisually()};\n`;\n\n// Important for accessibility\nconst ButtonLabel = styled('span')`\n  ${labelBaseStyles};\n`;\n\n/**\n * A generic close button.\n */\nconst CloseButton = ({ label, ...props }) => (\n  <SvgCloseButton {...props}>\n    <Icon />\n    <ButtonLabel>{label}</ButtonLabel>\n  </SvgCloseButton>\n);\n\nCloseButton.propTypes = {\n  /**\n   * Text label for screen readers. Important for accessibility.\n   */\n  label: PropTypes.string\n};\n\nCloseButton.defaultProps = {\n  label: 'close'\n};\n\n/**\n * @component\n */\nexport default CloseButton;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CloseButton from './CloseButton';\n\nexport default CloseButton;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { size } from 'polished';\nimport { withProps } from 'recompose';\n\nconst baseStyles = ({ theme }) => css`\n  label: svg-button;\n  padding: 0;\n  margin: 0;\n  display: inline-block;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  fill: ${theme.colors.black};\n  overflow: initial;\n\n  &:focus,\n  &:active {\n    outline: none;\n  }\n\n  > svg {\n    ${size('100%')};\n  }\n`;\n\n/**\n * SvgButton component for forms.\n */\nconst SvgButton = styled('button')`\n  ${baseStyles};\n`;\n\nSvgButton.propTypes = {\n  children: PropTypes.element.isRequired\n};\n\n/**\n * @component\n */\nexport default withProps({ type: 'button' })(SvgButton);\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SvgButton from './SvgButton';\n\nexport default SvgButton;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { eitherOrPropType } from '../../util/shared-prop-types';\nimport { textMega, shadowBorder } from '../../styles/style-helpers';\nimport DefaultCloseButton from '../CloseButton';\n\nconst closeButtonStyles = ({ theme }) => css`\n  label: tag__close-button;\n  margin-left: ${theme.spacings.kilo};\n  vertical-align: middle;\n`;\n\nconst closeButtonSelectedStyles = ({ selected, theme }) =>\n  selected &&\n  css`\n    label: tag__close-button--selected;\n\n    > svg {\n      fill: ${theme.colors.white};\n      vertical-align: inherit;\n    }\n  `;\n\nconst CloseButton = styled(DefaultCloseButton)(\n  closeButtonStyles,\n  closeButtonSelectedStyles\n);\n\nconst tagStyles = ({ theme }) => css`\n  label: tag;\n  border-radius: ${theme.borderRadius.mega};\n\n  ${textMega({ theme })};\n  ${shadowBorder(theme.colors.n300)};\n  padding: ${theme.spacings.bit} ${theme.spacings.kilo};\n  cursor: default;\n  display: inline-block;\n`;\n\nconst tagClickableStyles = ({ onClick, theme }) =>\n  onClick &&\n  css`\n    label: tag--clickable;\n    cursor: pointer;\n\n    &:hover {\n      background-color: ${theme.colors.n300};\n      ${shadowBorder(theme.colors.n300)};\n    }\n  `;\n\nconst tagSelectedStyles = ({ selected, theme }) =>\n  selected &&\n  css`\n    label: tag--selected;\n    background-color: ${theme.colors.p500};\n    ${shadowBorder(theme.colors.p500)};\n    color: ${theme.colors.white};\n  `;\n\nconst tagSelectedClickableStyles = ({ selected, onClick, theme }) =>\n  selected &&\n  onClick &&\n  css`\n    &:hover {\n      background-color: ${theme.colors.p500};\n      ${shadowBorder(theme.colors.p500)};\n    }\n  `;\n\nconst iconStyles = ({ theme }) => css`\n  label: tag__icon;\n  margin-right: ${theme.spacings.bit};\n  display: inline-block;\n  width: ${theme.spacings.mega};\n  height: ${theme.spacings.mega};\n  vertical-align: middle;\n\n  > svg {\n    vertical-align: top;\n  }\n`;\n\nconst iconSelectedStyles = ({ selected, theme }) =>\n  selected &&\n  css`\n    label: tag__icon--selected;\n\n    > svg {\n      fill: ${theme.colors.white};\n    }\n  `;\n\nconst IconContainer = styled('span')`\n  ${iconStyles};\n  ${iconSelectedStyles};\n`;\nconst TagElement = styled('span')`\n  ${tagStyles};\n  ${tagClickableStyles};\n  ${tagSelectedStyles};\n  ${tagSelectedClickableStyles};\n`;\n\n/**\n * Tag component\n */\nconst Tag = ({\n  children,\n  icon,\n  onRemove,\n  labelRemoveButton,\n  selected,\n  ...props\n}) => (\n  <TagElement {...{ selected, ...props }}>\n    {!onRemove && icon && (\n      <IconContainer {...{ selected }}>{icon}</IconContainer>\n    )}\n    {children}\n    {onRemove && (\n      <CloseButton\n        onClick={onRemove}\n        selected={selected}\n        label={labelRemoveButton}\n      />\n    )}\n  </TagElement>\n);\n\nTag.propTypes = {\n  /**\n   * The content of the tag.\n   */\n  children: PropTypes.node,\n  /**\n   * An optional  tag's icon.\n   */\n  icon: eitherOrPropType('icon', 'onRemove', PropTypes.element),\n  /**\n   * Renders a close button inside the tag and calls the provided function\n   * when the button is clicked.\n   */\n  onRemove: eitherOrPropType('icon', 'onRemove', PropTypes.func),\n  /**\n   * Text label for the remove icon for screen readers.\n   * Important for accessibility.\n   */\n  labelRemoveButton: PropTypes.string,\n  /**\n   * Triggers selected styles on the tag.\n   */\n  selected: PropTypes.bool\n};\n\nTag.defaultProps = {\n  children: null,\n  icon: null,\n  onRemove: null,\n  selected: false,\n  labelRemoveButton: 'remove'\n};\n\n/**\n * @component\n */\nexport default Tag;\n"],"sourceRoot":""}