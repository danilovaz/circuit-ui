{"version":3,"sources":["/Users/connorbaer/Code/GitHub/sumup/circuit-ui/src/components/Markdown/Markdown.js","/Users/connorbaer/Code/GitHub/sumup/circuit-ui/docs/content/components/markdown.mdx"],"names":["Markdown","_ref","children","overrides","forceBlock","forceInline","transformer","deprecate","options","transformedMarkdown","compiler","propTypes","PropTypes","string","func","object","bool","defaultProps","md","layoutProps","MDXLayout","MDXContent","components","props","Object","objectWithoutProperties","index_es","esm_extends","mdxType","id","Statuses","Deprecated","index_esm","__position","__code","__scope","this","Playground","Props","Fragment","Text","Status","__codesandbox","components_Markdown_Markdown","of","isMDXComponent"],"mappings":"mqBAuBMA,EAAW,SAAAC,GAMX,IALJC,EAKID,EALJC,SACAC,EAIIF,EAJJE,UACAC,EAGIH,EAHJG,WACAC,EAEIJ,EAFJI,YACAC,EACIL,EADJK,YAEAC,YAAU,iCAEV,IAAMC,EAAU,CAAEL,YAAWC,aAAYC,eACnCI,EAAsBH,EAAYJ,GAExC,OADaQ,YAASD,EAAqBD,IAI7CR,EAASW,UAAY,CAInBT,SAAUU,IAAUC,OAKpBP,YAAaM,IAAUE,KAMvBX,UAAWS,IAAUG,OAKrBX,WAAYQ,IAAUI,KAKtBX,YAAaO,IAAUI,MAGzBhB,EAASiB,aAAe,CACtBf,SAAU,GACVI,YAAa,SAAAY,GAAE,OAAIA,GACnBf,UAAW,GACXC,YAAY,EACZC,aAAa,GAMAL,+SCnEf,IAKMmB,EAAc,GAGdC,EAAY,UACH,SAASC,EAATpB,GAGZ,IAFDqB,EAECrB,EAFDqB,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAvB,EAAA,gBACD,OAAOuB,OAAAE,EAAA,EAAAF,CAACJ,EAADI,OAAAG,EAAA,EAAAH,CAAA,GAAeL,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,YADR,YAGAL,OAAAE,EAAA,EAAAF,CAACM,EAAA,EAAOC,WAAR,MACAP,OAAAE,EAAA,EAAAF,CAAA,2CACAA,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,sCAAuCC,QAAS,CACjFZ,MAAOa,KAAOA,KAAKb,MAAQA,EAC3Bc,eACAC,UACAC,oBACAvC,WACAwC,SACAC,YACCC,cAAa,YAAed,QAAQ,cACzCJ,OAAAE,EAAA,EAAAF,CAACmB,EAAD,CAAUf,QAAQ,YAAlB,mBAEEJ,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAOY,GAAI5C,EAAU4B,QAAQ,qMAIjCP,EAAWwB,gBAAiB","file":"static/js/docs-content-components-markdown.3ed728b1.js","sourcesContent":["/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropTypes from 'prop-types';\nimport { compiler } from 'markdown-to-jsx';\n\nimport deprecate from '../../util/deprecate';\n\n/**\n * Markdown component to parse and render GFM to JSX.\n */\nconst Markdown = ({\n  children,\n  overrides,\n  forceBlock,\n  forceInline,\n  transformer\n}) => {\n  deprecate('Markdown has been deprecated.');\n\n  const options = { overrides, forceBlock, forceInline };\n  const transformedMarkdown = transformer(children);\n  const html = compiler(transformedMarkdown, options);\n  return html;\n};\n\nMarkdown.propTypes = {\n  /**\n   * The GitHub flavoured markdown content to be parsed and rendered.\n   */\n  children: PropTypes.string,\n  /**\n   * A function to transform/clean the markdown string before it is parsed.\n   * Receives the markdown string as first argument and should return a string.\n   */\n  transformer: PropTypes.func,\n  /**\n   * Override an HTML tag with a React component, e.g. `a` -> `<Link />`\n   * The React component is passed all HTML attributes as props.\n   * See https://github.com/probablyup/markdown-to-jsx for documentation.\n   */\n  overrides: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  /**\n   * Treat all markdown strings as \"block\" elements.\n   * See https://github.com/probablyup/markdown-to-jsx for documentation.\n   */\n  forceBlock: PropTypes.bool,\n  /**\n   * Treat all markdown strings as \"inline\" elements.\n   * See https://github.com/probablyup/markdown-to-jsx for documentation.\n   */\n  forceInline: PropTypes.bool\n};\n\nMarkdown.defaultProps = {\n  children: '',\n  transformer: md => md,\n  overrides: {},\n  forceBlock: false,\n  forceInline: false\n};\n\n/**\n * @component\n */\nexport default Markdown;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Fragment } from 'react';\nimport Markdown from '../../../src/components/Markdown/Markdown';\nimport Text from '../../../src/components/Text';\nimport Status from '../../utils/Statuses';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"markdown\"\n    }}>{`Markdown`}</h1>\n    <Status.Deprecated />\n    <p>{`To be removed in Circuit v2.0.`}</p>\n    <Playground __position={1} __code={'<Markdown>**I am bold!**</Markdown>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Fragment,\n      Markdown,\n      Text,\n      Status\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <Markdown mdxType=\"Markdown\">**I am bold!**</Markdown>\n    </Playground>\n    <Props of={Markdown} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}