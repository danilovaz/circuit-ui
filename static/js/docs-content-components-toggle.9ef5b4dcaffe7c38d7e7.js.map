{"version":3,"sources":["/Users/connorbaer/Code/GitHub/circuit-ui/docs/content/components/toggle.mdx","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/State/State.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/State/index.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Toggle/components/Switch/Switch.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Toggle/components/Switch/index.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Toggle/Toggle.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Toggle/index.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/util/id.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/util/type-check.js"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_connorbaer_Code_GitHub_circuit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__","_Users_connorbaer_Code_GitHub_circuit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","mdxType","id","_utils_Statuses__WEBPACK_IMPORTED_MODULE_8__","Stable","docz__WEBPACK_IMPORTED_MODULE_5__","__position","__code","__scope","this","Playground","Props","Fragment","Toggle","State","Status","Text","__codesandbox","_src_components_State__WEBPACK_IMPORTED_MODULE_7__","initial","name","updaterName","updater","on","_ref2","onChange","_src_components_Toggle__WEBPACK_IMPORTED_MODULE_6__","label","explanation","e","of","parentName","isMDXComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initialStateValue","isFunction","state","defineProperty","_props","_this2","_this$props","children","data","setState","prevState","Component","knobShadow","color","concat","trackBaseStyles","theme","css","colors","n300","size","trackOnStyles","p500","SwitchTrack","styled_base_browser_esm","target","knobBaseStyles","_ref3","n100","n500","spacings","bit","knobOnStyles","_ref4","p700","TRACK_WIDTH","labelBaseStyles","hideVisually","SwitchKnob","SwitchLabel","Switch","_ref5","onToggle","labelOn","labelOff","rest","objectWithoutProperties","core_browser_esm","esm_extends","type","onClick","role","aria-checked","defaultProps","textWrapperStyles","kilo","ToggleTextWrapper","labelStyles","styles","ToggleLabel","propTypes","explanationStyles","ToggleExplanation","toggleWrapperStyles","mega","toggleWrapperNoMarginStyles","noMargin","Toggle_ref","ToggleWrapper","_ref6","switchId","uniqueId","labelId","components_Switch","aria-labelledby","htmlFor","KILO","__webpack_require__","d","__webpack_exports__","idCounter","prefix","arguments","length","undefined","isArray","val","isString","value","constructor","Array"],"mappings":"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","file":"static/js/docs-content-components-toggle.b74b3b9c.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Fragment } from 'react';\nimport Toggle from '../../../src/components/Toggle';\nimport State from '../../../src/components/State';\nimport Status from '../../utils/Statuses';\nimport Text from '../../../src/components/Text';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"toggle\"\n    }}>{`Toggle`}</h1>\n    <Status.Stable />\n    <p>{`The toggle is a switcher between two mutually exclusive states: on and off.`}</p>\n    <Playground __position={1} __code={'<State initial={false} name=\\\"on\\\" updaterName=\\\"onChange\\\" updater={on => !on}>\\n  {({ onChange, on }) => (\\n    <Toggle\\n      label=\\\"Receive marketing and promotional materials\\\"\\n      explanation=\\\"If this option is active you will receive weekly promotional materials in your email\\\"\\n      onChange={e => {\\n        onChange(e)\\n      }}\\n      {...{ on }}\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Fragment,\n      Toggle,\n      State,\n      Status,\n      Text\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <State initial={false} name=\"on\" updaterName=\"onChange\" updater={on => !on} mdxType=\"State\">\n    {({\n          onChange,\n          on\n        }) => <Toggle label=\"Receive marketing and promotional materials\" explanation=\"If this option is active you will receive weekly promotional materials in your email\" onChange={e => {\n          onChange(e);\n        }} {...{\n          on\n        }} mdxType=\"Toggle\" />}\n  </State>\n    </Playground>\n    <Props of={Toggle} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"when-to-use-it\"\n    }}>{`When to use it`}</h2>\n    <p>{`When the merchant needs to make a selection (turn on or off a setting) that will immediately happen,\nwithout having the confirm the action.`}</p>\n    <h2 {...{\n      \"id\": \"usage-guidelines\"\n    }}>{`Usage guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` always provide a default option for our merchant (when in doubt, leave it off)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` use the `}<inlineCode parentName=\"li\">{`explanation`}</inlineCode>{` tag to be even more detailed about what the toggle is about`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not`}</strong>{` use a toggle when the effect from the change does not take effect immediately`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"content-guidelines\"\n    }}>{`Content guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` always be clear and precise in what the toggle turns on and off`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not`}</strong>{` frame the label as a question`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isFunction } from '../../util/type-check';\n\nclass State extends Component {\n  static propTypes = {\n    // eslint-disable-next-line react/forbid-prop-types\n    initial: PropTypes.any.isRequired,\n    name: PropTypes.string.isRequired,\n    updaterName: PropTypes.string.isRequired,\n    updater: PropTypes.func.isRequired,\n    children: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    const { initial, name } = props;\n    const initialStateValue = isFunction(initial) ? initial(props) : initial;\n    this.state = {\n      [name]: initialStateValue\n    };\n  }\n\n  render() {\n    const { children, name, updaterName, updater } = this.props;\n\n    const props = {\n      [name]: this.state[name],\n      [updaterName]: data => {\n        this.setState(prevState => ({\n          [name]: updater(prevState[name], data)\n        }));\n      }\n    };\n\n    return children(props);\n  }\n}\n\n/**\n * @component\n */\nexport default State;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport State from './State';\n\nexport default State;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { hideVisually, size } from 'polished';\n\nimport { deprecatedPropType } from '../../../../util/shared-prop-types';\n\nconst TRACK_WIDTH = 40;\nconst TRACK_HEIGHT = 24;\nconst KNOB_SIZE = 16;\nconst ANIMATION_TIMING = '200ms ease-in-out';\n\nconst knobShadow = color => `0 2px 0 0 ${color}`;\n\nconst trackBaseStyles = ({ theme }) => css`\n  label: toggle__switch;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  appearance: none;\n  flex: 0 0 ${TRACK_WIDTH}px;\n  background-color: ${theme.colors.n300};\n  border-radius: ${TRACK_HEIGHT}px;\n  position: relative;\n  transition: background-color ${ANIMATION_TIMING};\n  ${size(TRACK_HEIGHT, TRACK_WIDTH)};\n  overflow: visible;\n\n  &::-moz-focus-inner {\n    border-radius: ${TRACK_HEIGHT}px;\n  }\n`;\n\nconst trackOnStyles = ({ theme, on }) =>\n  on &&\n  css`\n    label: toggle__switch--on;\n    background-color: ${theme.colors.p500};\n  `;\n\nconst SwitchTrack = styled('button')`\n  ${trackBaseStyles} ${trackOnStyles};\n`;\n\nconst knobBaseStyles = ({ theme }) => css`\n  label: toggle__switch-knob;\n  display: block;\n  background-color: ${theme.colors.n100};\n  box-shadow: ${knobShadow(theme.colors.n500)};\n  position: absolute;\n  top: 50%;\n  transform: translate3d(${theme.spacings.bit}, -50%, 0);\n  transition: box-shadow ${ANIMATION_TIMING}, transform ${ANIMATION_TIMING};\n  ${size(KNOB_SIZE)};\n  border-radius: ${KNOB_SIZE}px;\n`;\n\nconst knobOnStyles = ({ theme, on }) =>\n  on &&\n  css`\n    label: toggle__switch-knob--on;\n    box-shadow: ${knobShadow(theme.colors.p700)};\n    transform: translate3d(\n      calc(${TRACK_WIDTH - KNOB_SIZE}px - ${theme.spacings.bit}),\n      -50%,\n      0\n    );\n  `;\n\nconst labelBaseStyles = () => css`\n  label: toggle__switch-label;\n  ${hideVisually()};\n`;\n\nconst SwitchKnob = styled('span')`\n  ${knobBaseStyles} ${knobOnStyles};\n`;\n\n// Important for accessibility\nconst SwitchLabel = styled('span')`\n  ${labelBaseStyles};\n`;\n\n/**\n * A simple Switch component.\n */\nconst Switch = ({ on, onToggle, onChange, labelOn, labelOff, ...rest }) => (\n  <SwitchTrack\n    type=\"button\"\n    onClick={onToggle || onChange}\n    on={on}\n    role=\"switch\"\n    aria-checked={on}\n    {...rest}\n  >\n    <SwitchKnob {...{ on }} />\n    <SwitchLabel>{on ? labelOn : labelOff}</SwitchLabel>\n  </SwitchTrack>\n);\n\nSwitch.propTypes = {\n  /**\n   * Is the Switch on?\n   */\n  on: PropTypes.bool,\n  /**\n   * @deprecated\n   * Callback used when the user toggles the switch.\n   */\n  onToggle: deprecatedPropType(\n    PropTypes.func,\n    [\n      'The \"onToggle\" prop is deprecated.',\n      'Use the \"onChange\" prop instead.'\n    ].join(' ')\n  ),\n  /**\n   * Callback used when the user toggles the switch.\n   */\n  onChange: PropTypes.func.isRequired,\n  /**\n   * Label for the 'on' state. Important for accessibility.\n   */\n  labelOn: PropTypes.string,\n  /**\n   * Label for the 'off' state. Important for accessibility.\n   */\n  labelOff: PropTypes.string\n};\n\nSwitch.defaultProps = {\n  on: false,\n  labelOn: 'on',\n  labelOff: 'off'\n};\n\n/**\n * @component\n */\nexport default Switch;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Switch from './Switch';\n\nexport default Switch;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { uniqueId } from '../../util/id';\n\nimport { Switch } from './components';\nimport Text from '../Text';\n\nconst textWrapperStyles = ({ theme }) => css`\n  label: toggle__text-wrapper;\n  display: block;\n  margin-left: ${theme.spacings.kilo};\n`;\n\nconst ToggleTextWrapper = styled('label')`\n  ${textWrapperStyles};\n`;\n\nconst labelStyles = css`\n  label: toggle__label;\n  padding-top: 2px;\n`;\n\nconst ToggleLabel = styled(Text)`\n  ${labelStyles};\n`;\nToggleLabel.propTypes = Text.propTypes;\nToggleLabel.defaultProps = Text.defaultProps;\n\nconst explanationStyles = ({ theme }) => css`\n  label: toggle__explanation;\n  color: ${theme.colors.n500};\n`;\n\nconst ToggleExplanation = styled(Text)`\n  ${explanationStyles};\n`;\nToggleExplanation.propTypes = Text.propTypes;\nToggleExplanation.defaultProps = Text.defaultProps;\n\nconst toggleWrapperStyles = ({ theme }) => css`\n  label: toggle;\n  display: flex;\n  flex-align: flex-start;\n  margin-bottom: ${theme.spacings.mega};\n`;\n\nconst toggleWrapperNoMarginStyles = ({ noMargin }) =>\n  noMargin &&\n  css`\n    label: toggle--no-margin;\n    margin-bottom: 0;\n  `;\n\nconst ToggleWrapper = styled('div')`\n  ${toggleWrapperStyles} ${toggleWrapperNoMarginStyles};\n`;\n\n/**\n * A toggle component with support for labels and additional explanations.\n */\nconst Toggle = ({ label, explanation, noMargin, ...props }) => {\n  const switchId = uniqueId('toggle-switch_');\n  const labelId = uniqueId('toggle-label_');\n  return (\n    <ToggleWrapper {...{ noMargin }}>\n      <Switch {...props} aria-labelledby={labelId} id={switchId} />\n      {(label || explanation) && (\n        <ToggleTextWrapper id={labelId} htmlFor={switchId}>\n          {label && (\n            <ToggleLabel size={Text.KILO} noMargin>\n              {label}\n            </ToggleLabel>\n          )}\n          {explanation && (\n            <ToggleExplanation size={Text.KILO} noMargin>\n              {explanation}\n            </ToggleExplanation>\n          )}\n        </ToggleTextWrapper>\n      )}\n    </ToggleWrapper>\n  );\n};\n\nToggle.propTypes = {\n  /**\n   * Describes the function of the toggle. Should not change depending on the state.\n   */\n  label: PropTypes.string,\n  /**\n   * Further explanation of the toggle. Can change depending on the state.\n   */\n  explanation: PropTypes.string,\n  /**\n   * Removes the default bottom margin from the input.\n   */\n  noMargin: PropTypes.bool\n};\n\nToggle.defaultProps = {\n  label: null,\n  explanation: null,\n  noMargin: false\n};\n\n/**\n * @component\n */\nexport default Toggle;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Toggle from './Toggle';\n\nexport default Toggle;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// NOTE: Related issue https://github.com/facebook/react/issues/5867\n\nlet idCounter = 0;\n\nexport const uniqueId = (prefix = '') => {\n  idCounter += 1;\n  return `${prefix}${idCounter}`;\n};\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const isFunction = val => typeof val === 'function';\nexport const isString = val => typeof val === 'string';\nexport const isArray = value =>\n  value && typeof value === 'object' && value.constructor === Array;\n"],"sourceRoot":""}