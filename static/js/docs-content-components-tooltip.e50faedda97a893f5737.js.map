{"version":3,"sources":["/Users/connorbaer/Code/GitHub/circuit-ui/docs/content/components/TooltipContainer.js","/Users/connorbaer/Code/GitHub/circuit-ui/docs/content/components/tooltip.mdx","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Tooltip/Tooltip.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Tooltip/index.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/util/shared-prop-types.js"],"names":["TooltipContainer","Object","styled_base_browser_esm","target","name","styles","layoutProps","MDXLayout","MDXContent","_ref","components","props","objectWithoutProperties","index_es","esm_extends","mdxType","id","Statuses","Stable","index_esm","__position","__code","__scope","this","Playground","Props","Fragment","Tooltip","Status","Text","__codesandbox","components_TooltipContainer","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","d","cx","cy","r","of","parentName","isMDXComponent","baseStyles","theme","css","colors","n900","white","borderRadius","mega","spacings","kilo","zIndex","tooltip","textKilo","shadowSingle","positionMap","_positionMap","defineProperty","TOP","RIGHT","BOTTOM","LEFT","positionAndAlignStyles","_ref4","position","align","concat","_ref3","isHorizontal","includes","CENTER","absolutePosition","bit","getAlignmentStyles","_ref2","getPositionStyles","propTypes","children","PropTypes","node","isRequired","positionPropType","oneOf","defaultProps","deprecatedPropType","propType","explanation","arguments","length","undefined","propName","componentName","isNil","deprecate","checkPropTypes","_Users_connorbaer_Code_GitHub_circuit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","eitherOrPropType","firstProp","secondProp","hasFirstProp","hasSecondProp","Error","childrenPropType","oneOfType","arrayOf","childrenRenderPropType","func","typePropType","shape","fontSize","string","lineHeight","themePropType","black","n100","n300","n500","n700","b100","b300","b500","b700","b900","g100","g300","g500","g700","g900","y100","y300","y500","y700","y900","r100","r300","r500","r700","r900","p100","p300","p500","p700","p900","shadow","bodyBg","bodyColor","byte","giga","tera","peta","exa","zetta","iconSizes","typography","headings","subHeadings","text","fontStack","default","mono","fontWeight","regular","bold","localePropType","prop","test","alignPropType","START","END"],"mappings":"kpBAEMA,EAAgBC,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,kFAUPL,mVCDf,IAKMM,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFV,OAAAW,EAAA,EAAAX,CAAAQ,EAAA,gBACD,OAAOR,OAAAY,EAAA,EAAAZ,CAACM,EAADN,OAAAa,EAAA,EAAAb,CAAA,GAAeK,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYK,QAAQ,cAE5Ed,OAAAY,EAAA,EAAAZ,CAAA,KAAQ,CACNe,GAAM,WADR,WAGAf,OAAAY,EAAA,EAAAZ,CAACgB,EAAA,EAAOC,OAAR,MACAjB,OAAAY,EAAA,EAAAZ,CAAA,uIAEAA,OAAAY,EAAA,EAAAZ,CAACkB,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,udAAofC,QAAS,CAC9hBX,MAAOY,KAAOA,KAAKZ,MAAQA,EAC3Ba,eACAC,UACAC,oBACAC,YACA3B,mBACA4B,WACAC,UACCC,cAAa,m8oBAAs8oBf,QAAQ,cACh+oBd,OAAAY,EAAA,EAAAZ,CAAC8B,EAAD,CAAkBhB,QAAQ,oBACxBd,OAAAY,EAAA,EAAAZ,CAAC0B,EAAA,EAAD,CAASZ,QAAQ,WAAjB,+BACAd,OAAAY,EAAA,EAAAZ,CAAA,OAAK+B,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAQC,UAAU,uBAC1LxC,OAAAY,EAAA,EAAAZ,CAAA,QAAMyC,EAAE,iDACRzC,OAAAY,EAAA,EAAAZ,CAAA,UAAQ0C,GAAG,KAAKC,GAAG,KAAKC,EAAE,SAI5B5C,OAAAY,EAAA,EAAAZ,CAACkB,EAAA,EAAD,CAAO2B,GAAInB,IAASZ,QAAQ,UAC5Bd,OAAAY,EAAA,EAAAZ,CAAA,KAAQ,CACNe,GAAM,kBADR,kBAGAf,OAAAY,EAAA,EAAAZ,CAAA,6LAEAA,OAAAY,EAAA,EAAAZ,CAAA,KAAQ,CACNe,GAAM,oBADR,oBAGAf,OAAAY,EAAA,EAAAZ,CAAA,UACEA,OAAAY,EAAA,EAAAZ,CAAA,MAAI8C,WAAW,MAAK9C,OAAAY,EAAA,EAAAZ,CAAA,UAAQ8C,WAAW,MAAnB,MAApB,2DACA9C,OAAAY,EAAA,EAAAZ,CAAA,MAAI8C,WAAW,MAAK9C,OAAAY,EAAA,EAAAZ,CAAA,UAAQ8C,WAAW,MAAnB,MAApB,6DACA9C,OAAAY,EAAA,EAAAZ,CAAA,MAAI8C,WAAW,MAAK9C,OAAAY,EAAA,EAAAZ,CAAA,UAAQ8C,WAAW,MAAnB,MAApB,uBACA9C,OAAAY,EAAA,EAAAZ,CAAA,MAAI8C,WAAW,MAAK9C,OAAAY,EAAA,EAAAZ,CAAA,UAAQ8C,WAAW,MAAnB,MAApB,cACA9C,OAAAY,EAAA,EAAAZ,CAAA,MAAI8C,WAAW,MAAK9C,OAAAY,EAAA,EAAAZ,CAAA,UAAQ8C,WAAW,MAAnB,MAApB,uCACA9C,OAAAY,EAAA,EAAAZ,CAAA,MAAI8C,WAAW,MAAK9C,OAAAY,EAAA,EAAAZ,CAAA,UAAQ8C,WAAW,MAAnB,UAApB,uDACA9C,OAAAY,EAAA,EAAAZ,CAAA,MAAI8C,WAAW,MAAK9C,OAAAY,EAAA,EAAAZ,CAAA,UAAQ8C,WAAW,MAAnB,UAApB,yFACA9C,OAAAY,EAAA,EAAAZ,CAAA,MAAI8C,WAAW,MAAK9C,OAAAY,EAAA,EAAAZ,CAAA,UAAQ8C,WAAW,MAAnB,UAApB,6CACA9C,OAAAY,EAAA,EAAAZ,CAAA,MAAI8C,WAAW,MAAK9C,OAAAY,EAAA,EAAAZ,CAAA,UAAQ8C,WAAW,MAAnB,UAApB,8RAKNvC,EAAWwC,gBAAiB,0fCjDtBC,EAAa,SAAAxC,GAAA,IAAGyC,EAAHzC,EAAGyC,MAAH,OAAeC,WAAf,mGAMGD,EAAME,OAAOC,KANhB,UAORH,EAAME,OAAOE,MAPL,kBAQAJ,EAAMK,aAAaC,KARnB,YASNN,EAAMO,SAAN,KATM,IASiBP,EAAMO,SAASC,KAThC,8BAWNR,EAAMS,OAAOC,QAXP,4BAafC,mBAAS,CAAEX,UAbI,IAcfY,uBAAa,CAAEZ,UAdA,gFAsBLA,EAAMO,SAAN,KAtBK,yBA0BbM,GAAWC,EAAA,GAAA/D,OAAAgE,EAAA,EAAAhE,CAAA+D,EACdE,IAAM,UADQjE,OAAAgE,EAAA,EAAAhE,CAAA+D,EAEdG,IAAQ,QAFMlE,OAAAgE,EAAA,EAAAhE,CAAA+D,EAGdI,IAAS,OAHKnE,OAAAgE,EAAA,EAAAhE,CAAA+D,EAIdK,IAAO,SAJOL,GA6DXM,EAAyB,SAAAC,GAAA,IAAGrB,EAAHqB,EAAGrB,MAAOsB,EAAVD,EAAUC,SAAUC,EAApBF,EAAoBE,MAApB,OAAgCtB,WAAhC,sBAAAuB,OACRF,EADQ,KAAAE,OACID,GADJ,IAzCJ,SAAAE,GAAgC,IAA7BzB,EAA6ByB,EAA7BzB,MAAOsB,EAAsBG,EAAtBH,SAAUC,EAAYE,EAAZF,MACvCG,EAAeC,mBAASL,EAAU,CAACN,IAAKE,MAE9C,GAAIQ,GAAgBC,mBAASJ,EAAO,CAACP,IAAKE,IAAQU,MAChD,4JAWF,IAAKF,GAAgBC,mBAASJ,EAAO,CAACJ,IAAMF,IAAOW,MACjD,0JAWF,IAAMC,EAAmBhB,EAAYU,GAErC,eAAAC,OACIK,EADJ,gBAAAL,OAEIK,EAFJ,kBAAAL,OAEqCxB,EAAMO,SAASD,KAFpD,OAAAkB,OAGExB,EAAMO,SAASuB,IAHjB,iCAAAN,OAOMK,EAPN,MAAAL,OAO2BxB,EAAMO,SAASC,KAP1C,gBAcEuB,CAAmB,CAAE/B,QAAOsB,WAAUC,UAFX,IAtDL,SAAAS,GAAyB,IAAtBhC,EAAsBgC,EAAtBhC,MAAOsB,EAAeU,EAAfV,SAC5BO,EAAmBhB,EAAYS,GACrC,eAAAE,OACIK,EADJ,qBAAAL,OAEIK,EAFJ,kBAAAL,OAEqCxB,EAAMO,SAASC,KAFpD,gCAAAgB,OAKMF,EALN,0BAAAE,OAMaF,EANb,YAAAE,OAMgCxB,EAAME,OAAOC,KAN7C,gBAuDE8B,CAAkB,CAAEjC,QAAOsB,aAHA,MASzB7C,EAAU1B,OAAAC,EAAA,EAAAD,CAAO,MAAP,CAAAE,OAAA,YAAAF,CACZgD,EADS,IAETqB,EAFS,KAKb3C,EAAQmD,OAASA,IACjBnD,EAAQuC,IAAMA,IACdvC,EAAQwC,MAAQA,IAChBxC,EAAQyC,OAASA,IACjBzC,EAAQ0C,KAAOA,IAEf1C,EAAQyD,UAAY,CAIlBC,SAAUC,IAAUC,KAAKC,WAIzBhB,SAAUiB,IAIVhB,MAAOa,IAAUI,MAAM,CACrB/D,EAAQuC,IACRvC,EAAQwC,MACRxC,EAAQyC,OACRzC,EAAQ0C,KACR1C,EAAQmD,UAIZnD,EAAQgE,aAAe,CACrBnB,SAAU7C,EAAQwC,MAClBM,MAAO9C,EAAQmD,QAGFnD,oNC5IAA,+kBCQFiE,EAAqB,SAACC,GAAD,IAAWC,EAAXC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAyB,GAAzB,OAAgC,SAChEpF,EACAuF,EACAC,GASA,OAPKC,gBAAMzF,EAAMuF,KACfG,YAAS,IAAA3B,OAEHwB,EAFG,eAAAxB,OAEmByB,EAFnB,4BAAAzB,OAE2DoB,IAI/DR,IAAUgB,eAAVrG,OAAAsG,EAAA,EAAAtG,CAAA,GACFiG,EAAWL,GACdlF,EACAuF,EACAC,gMAIG,IAAMK,EAAmB,SAC9BC,EACAC,EACAb,GAH8B,IAI9BL,EAJ8BO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,UAK3B,SAACpF,EAAOuF,EAAUC,GACrB,IAAMQ,EAAehG,EAAM8F,GACrBG,EAAgBjG,EAAM+F,GAE5B,OAAIC,GAAgBC,EACX,IAAIC,MAAJ,2BAAAnC,OACsB+B,EADtB,UAAA/B,OACwCgC,EADxC,UAAAhC,OAC2DyB,EAD3D,qBAILX,GAAemB,GAAiBC,EAO7BtB,IAAUgB,eAAVrG,OAAAsG,EAAA,EAAAtG,CAAA,GACFiG,EAAWL,GACdlF,EACAuF,EACAC,GAVO,IAAIU,MAAJ,4BAAAnC,OACuB+B,EADvB,UAAA/B,OACyCgC,EADzC,UAAAhC,OAC4DyB,EAD5D,iNAcJ,IAAMW,EAAmBxB,IAAUyB,UAAU,CAClDzB,IAAU0B,QAAQ1B,IAAUC,MAC5BD,IAAUC,wNAGL,IAAM0B,EAAyB3B,IAAU4B,4NAEhD,IAAMC,EAAe7B,IAAU8B,MAAM,CACnCC,SAAU/B,IAAUgC,OACpBC,WAAYjC,IAAUgC,SACrB9B,WAEUgC,EAAgBlC,IAAU8B,MAAM,CAC3ChE,OAAQkC,IAAU8B,MAAM,CACtB9D,MAAOgC,IAAUgC,OAAO9B,WACxBiC,MAAOnC,IAAUgC,OAAO9B,WAExBkC,KAAMpC,IAAUgC,OAAO9B,WACvBmC,KAAMrC,IAAUgC,OAAO9B,WACvBoC,KAAMtC,IAAUgC,OAAO9B,WACvBqC,KAAMvC,IAAUgC,OAAO9B,WACvBnC,KAAMiC,IAAUgC,OAAO9B,WAEvBsC,KAAMxC,IAAUgC,OAAO9B,WACvBuC,KAAMzC,IAAUgC,OAAO9B,WACvBwC,KAAM1C,IAAUgC,OAAO9B,WACvByC,KAAM3C,IAAUgC,OAAO9B,WACvB0C,KAAM5C,IAAUgC,OAAO9B,WAEvB2C,KAAM7C,IAAUgC,OAAO9B,WACvB4C,KAAM9C,IAAUgC,OAAO9B,WACvB6C,KAAM/C,IAAUgC,OAAO9B,WACvB8C,KAAMhD,IAAUgC,OAAO9B,WACvB+C,KAAMjD,IAAUgC,OAAO9B,WAEvBgD,KAAMlD,IAAUgC,OAAO9B,WACvBiD,KAAMnD,IAAUgC,OAAO9B,WACvBkD,KAAMpD,IAAUgC,OAAO9B,WACvBmD,KAAMrD,IAAUgC,OAAO9B,WACvBoD,KAAMtD,IAAUgC,OAAO9B,WAEvBqD,KAAMvD,IAAUgC,OAAO9B,WACvBsD,KAAMxD,IAAUgC,OAAO9B,WACvBuD,KAAMzD,IAAUgC,OAAO9B,WACvBwD,KAAM1D,IAAUgC,OAAO9B,WACvByD,KAAM3D,IAAUgC,OAAO9B,WAEvB0D,KAAM5D,IAAUgC,OAAO9B,WACvB2D,KAAM7D,IAAUgC,OAAO9B,WACvB4D,KAAM9D,IAAUgC,OAAO9B,WACvB6D,KAAM/D,IAAUgC,OAAO9B,WACvB8D,KAAMhE,IAAUgC,OAAO9B,WAEvB+D,OAAQjE,IAAUgC,OAAO9B,WACzBgE,OAAQlE,IAAUgC,OAAO9B,WACzBiE,UAAWnE,IAAUgC,OAAO9B,aAC3BA,WACH/B,SAAU6B,IAAU8B,MAAM,CACxBpC,IAAKM,IAAUgC,OAAO9B,WACtBkE,KAAMpE,IAAUgC,OAAO9B,WACvB9B,KAAM4B,IAAUgC,OAAO9B,WACvBhC,KAAM8B,IAAUgC,OAAO9B,WACvBmE,KAAMrE,IAAUgC,OAAO9B,WACvBoE,KAAMtE,IAAUgC,OAAO9B,WACvBqE,KAAMvE,IAAUgC,OAAO9B,WACvBsE,IAAKxE,IAAUgC,OAAO9B,WACtBuE,MAAOzE,IAAUgC,OAAO9B,aACvBA,WACHwE,UAAW1E,IAAU8B,MAAM,CACzB1D,KAAM4B,IAAUgC,OAAO9B,WACvBhC,KAAM8B,IAAUgC,OAAO9B,aAEzBjC,aAAc+B,IAAU8B,MAAM,CAC5B1D,KAAM4B,IAAUgC,OAChB9D,KAAM8B,IAAUgC,OAChBqC,KAAMrE,IAAUgC,SACf9B,WACHyE,WAAY3E,IAAU8B,MAAM,CAC1B8C,SAAU5E,IAAU8B,MAAM,CACxB1D,KAAMyD,EACN3D,KAAM2D,EACNwC,KAAMxC,EACNyC,KAAMzC,EACN0C,KAAM1C,EACN2C,IAAK3C,EACL4C,MAAO5C,IACN3B,WACH2E,YAAa7E,IAAU8B,MAAM,CAC3B1D,KAAMyD,EACN3D,KAAM2D,IACL3B,WACH4E,KAAM9E,IAAU8B,MAAM,CACpB1D,KAAMyD,EACN3D,KAAM2D,EACNwC,KAAMxC,IACL3B,aAEL6E,UAAW/E,IAAU8B,MAAM,CACzBkD,QAAShF,IAAUgC,OACnBiD,KAAMjF,IAAUgC,SAElBkD,WAAYlF,IAAU8B,MAAM,CAC1BqD,QAASnF,IAAUgC,OAAO9B,WAC1BkF,KAAMpF,IAAUgC,OAAO9B,aACtBA,2NAGE,IAAMmF,EAAiB,SAAAnF,GAAU,OAAI,SAC1C7E,EACAuF,EACAC,GAGA,IAAMyE,EAAOjK,EAAMuF,GACnB,OAAIV,GAAgBoF,GAASA,EAAK5E,OAO7B,oBAAoB6E,KAAKD,GAOvB,KANE,IAAI/D,MACT,iBAAAnC,OAAkBwB,EAAlB,sBAAAxB,OACQyB,EADR,0BARK,IAAIU,MACT,SAAAnC,OAAUwB,EAAV,gCAAAxB,OAAmDyB,EAAnD,uBAAAzB,OACoBkG,EADpB,gMAeC,IAAMnF,EAAmBH,IAAUI,MAAM,CAACxB,IAAKE,IAAQC,IAAMF,uNAC7D,IAAM2G,EAAgBxF,IAAUI,MAAM,CAACqF,IAAOC,IAAKlG","file":"static/js/docs-content-components-tooltip.f5a43a2a.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst TooltipContainer = styled.div`\n  position: relative;\n  line-height: 0;\n  width: 32px;\n  div {\n    visibility: visible;\n    opacity: 1;\n  }\n`;\n\nexport default TooltipContainer;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Fragment } from 'react';\nimport Tooltip from '../../../src/components/Tooltip';\nimport TooltipContainer from './TooltipContainer';\nimport Status from '../../utils/Statuses';\nimport Text from '../../../src/components/Text';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"tooltip\"\n    }}>{`Tooltip`}</h1>\n    <Status.Stable />\n    <p>{`Tooltips display additional information on floating labels.\nThey can be activated when users hover, focus, tap, or click.`}</p>\n    <Playground __position={1} __code={'<TooltipContainer>\\n  <Tooltip>I am a teeny, tiny tooltip.</Tooltip>\\n  <svg\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    width=\\\"24\\\"\\n    height=\\\"24\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    fill=\\\"none\\\"\\n    stroke=\\\"currentColor\\\"\\n    strokeWidth=\\\"2\\\"\\n    strokeLinecap=\\\"round\\\"\\n    strokeLinejoin=\\\"round\\\"\\n    className=\\\"feather feather-eye\\\"\\n  >\\n    <path d=\\\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\\\" />\\n    <circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"3\\\" />\\n  </svg>\\n</TooltipContainer>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Fragment,\n      Tooltip,\n      TooltipContainer,\n      Status,\n      Text\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <TooltipContainer mdxType=\"TooltipContainer\">\n    <Tooltip mdxType=\"Tooltip\">I am a teeny, tiny tooltip.</Tooltip>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-eye\">\n      <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\" />\n      <circle cx=\"12\" cy=\"12\" r=\"3\" />\n    </svg>\n  </TooltipContainer>\n    </Playground>\n    <Props of={Tooltip} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"when-to-use-it\"\n    }}>{`When to use it`}</h2>\n    <p>{`You can use it as primary label, to associate one element with another (Icon→Action), or\nas an auxiliary description to provide a supplementary or clarifying description.`}</p>\n    <h2 {...{\n      \"id\": \"usage-guidelines\"\n    }}>{`Usage guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` use delay before the tooltip is hidden on mouse leave.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` provide useful, additional information or clarification.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` use sentence case.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` be brief.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` use it to describe an action/icon.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not`}</strong>{` use delay when the tooltip is shown on mouse enter`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not`}</strong>{` use it to communicate important information (form title attributes or notifications)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not`}</strong>{` put links or buttons inside of a tooltip`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not`}</strong>{` use it too often. If you are building not self-explanatory software, try different approaches.`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { includes } from 'lodash/fp';\n\nimport { textKilo, shadowSingle } from '../../styles/style-helpers';\nimport { CENTER, TOP, RIGHT, BOTTOM, LEFT } from '../../util/constants';\nimport { positionPropType } from '../../util/shared-prop-types';\n\nconst baseStyles = ({ theme }) => css`\n  label: tooltip;\n  display: inline-block;\n  width: 100%;\n  max-width: 280px;\n  min-width: 120px;\n  background-color: ${theme.colors.n900};\n  color: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.mega};\n  padding: ${theme.spacings.byte} ${theme.spacings.kilo};\n  position: absolute;\n  z-index: ${theme.zIndex.tooltip};\n  transition: opacity 0.3s;\n  ${textKilo({ theme })};\n  ${shadowSingle({ theme })};\n\n  &::after {\n    display: block;\n    content: '';\n    width: 0;\n    height: 0;\n    position: absolute;\n    border: ${theme.spacings.byte} solid transparent;\n  }\n`;\n\nconst positionMap = {\n  [TOP]: 'bottom',\n  [RIGHT]: 'left',\n  [BOTTOM]: 'top',\n  [LEFT]: 'right'\n};\n\nconst getPositionStyles = ({ theme, position }) => {\n  const absolutePosition = positionMap[position];\n  return `\n    ${absolutePosition}: 100%; ${'' /* Fallback  */}\n    ${absolutePosition}: calc(100% + ${theme.spacings.kilo});\n\n    &::after {\n      ${position}: 100%;\n      border-${position}-color: ${theme.colors.n900};\n    }\n  `;\n};\n\nconst getAlignmentStyles = ({ theme, position, align }) => {\n  const isHorizontal = includes(position, [TOP, BOTTOM]);\n\n  if (isHorizontal && includes(align, [TOP, BOTTOM, CENTER])) {\n    return `\n      left: 50%;\n      transform: translateX(-50%);\n\n      &::after {\n        left: 50%;\n        transform: translateX(-50%);\n      }\n    `;\n  }\n\n  if (!isHorizontal && includes(align, [LEFT, RIGHT, CENTER])) {\n    return `\n      top: 50%;\n      transform: translateY(-50%);\n\n      &::after {\n        top: 50%;\n        transform: translateY(-50%);\n      }\n    `;\n  }\n\n  const absolutePosition = positionMap[align];\n\n  return `\n    ${absolutePosition}: 50%;\n    ${absolutePosition}: calc(50% - (${theme.spacings.mega} + ${\n    theme.spacings.bit\n  }));\n\n    &::after {\n      ${absolutePosition}: ${theme.spacings.kilo};\n    }\n  `;\n};\n\nconst positionAndAlignStyles = ({ theme, position, align }) => css`\n  label: ${`tooltip--${position}-${align}`};\n  ${getAlignmentStyles({ theme, position, align })};\n  ${getPositionStyles({ theme, position })};\n`;\n\n/**\n * A Tooltip component\n */\nconst Tooltip = styled('div')`\n  ${baseStyles};\n  ${positionAndAlignStyles};\n`;\n\nTooltip.CENTER = CENTER;\nTooltip.TOP = TOP;\nTooltip.RIGHT = RIGHT;\nTooltip.BOTTOM = BOTTOM;\nTooltip.LEFT = LEFT;\n\nTooltip.propTypes = {\n  /**\n   * The content of the tooltip.\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * The position of the tooltip in relation to its reference point.\n   */\n  position: positionPropType,\n  /**\n   * The alignment of the tooltip relative to its position.\n   */\n  align: PropTypes.oneOf([\n    Tooltip.TOP,\n    Tooltip.RIGHT,\n    Tooltip.BOTTOM,\n    Tooltip.LEFT,\n    Tooltip.CENTER\n  ])\n};\n\nTooltip.defaultProps = {\n  position: Tooltip.RIGHT,\n  align: Tooltip.CENTER\n};\n\nexport default Tooltip;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Tooltip from './Tooltip';\n\nexport default Tooltip;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropTypes from 'prop-types';\nimport { isNil } from 'lodash/fp';\n\nimport deprecate from './deprecate';\nimport { TOP, BOTTOM, LEFT, RIGHT, START, END, CENTER } from './constants';\n\n// TODO: figure out if we can still get these props in react-docgen\n//       when they are imported and merged into a component's\n//       propTypes.\n\nexport const deprecatedPropType = (propType, explanation = '') => (\n  props,\n  propName,\n  componentName\n) => {\n  if (!isNil(props[propName])) {\n    deprecate(\n      // eslint-disable-next-line max-len\n      `\"${propName}\" prop of \"${componentName}\" has been deprecated.\\n${explanation}`\n    );\n  }\n\n  return PropTypes.checkPropTypes(\n    { [propName]: propType },\n    props,\n    propName,\n    componentName\n  );\n};\n\nexport const eitherOrPropType = (\n  firstProp,\n  secondProp,\n  propType,\n  isRequired = false\n) => (props, propName, componentName) => {\n  const hasFirstProp = props[firstProp];\n  const hasSecondProp = props[secondProp];\n  /* eslint-disable max-len */\n  if (hasFirstProp && hasSecondProp) {\n    return new Error(\n      `You can provide either '${firstProp}' or '${secondProp}' to '${componentName}' but not both.`\n    );\n  }\n  if (isRequired && !hasFirstProp && !hasSecondProp) {\n    return new Error(\n      `You must provide either '${firstProp}' or '${secondProp}' to '${componentName}' (but not both).`\n    );\n  }\n  /* eslint-enable max-len */\n\n  return PropTypes.checkPropTypes(\n    { [propName]: propType },\n    props,\n    propName,\n    componentName\n  );\n};\n\nexport const childrenPropType = PropTypes.oneOfType([\n  PropTypes.arrayOf(PropTypes.node),\n  PropTypes.node\n]);\n\nexport const childrenRenderPropType = PropTypes.func;\n\nconst typePropType = PropTypes.shape({\n  fontSize: PropTypes.string,\n  lineHeight: PropTypes.string\n}).isRequired;\n\nexport const themePropType = PropTypes.shape({\n  colors: PropTypes.shape({\n    white: PropTypes.string.isRequired,\n    black: PropTypes.string.isRequired,\n    // Neutrals\n    n100: PropTypes.string.isRequired,\n    n300: PropTypes.string.isRequired,\n    n500: PropTypes.string.isRequired,\n    n700: PropTypes.string.isRequired,\n    n900: PropTypes.string.isRequired,\n    // Blues\n    b100: PropTypes.string.isRequired,\n    b300: PropTypes.string.isRequired,\n    b500: PropTypes.string.isRequired,\n    b700: PropTypes.string.isRequired,\n    b900: PropTypes.string.isRequired,\n    // Greens\n    g100: PropTypes.string.isRequired,\n    g300: PropTypes.string.isRequired,\n    g500: PropTypes.string.isRequired,\n    g700: PropTypes.string.isRequired,\n    g900: PropTypes.string.isRequired,\n    // Yellows\n    y100: PropTypes.string.isRequired,\n    y300: PropTypes.string.isRequired,\n    y500: PropTypes.string.isRequired,\n    y700: PropTypes.string.isRequired,\n    y900: PropTypes.string.isRequired,\n    // Reds\n    r100: PropTypes.string.isRequired,\n    r300: PropTypes.string.isRequired,\n    r500: PropTypes.string.isRequired,\n    r700: PropTypes.string.isRequired,\n    r900: PropTypes.string.isRequired,\n    // Primary\n    p100: PropTypes.string.isRequired,\n    p300: PropTypes.string.isRequired,\n    p500: PropTypes.string.isRequired,\n    p700: PropTypes.string.isRequired,\n    p900: PropTypes.string.isRequired,\n    // Misc\n    shadow: PropTypes.string.isRequired,\n    bodyBg: PropTypes.string.isRequired,\n    bodyColor: PropTypes.string.isRequired\n  }).isRequired,\n  spacings: PropTypes.shape({\n    bit: PropTypes.string.isRequired,\n    byte: PropTypes.string.isRequired,\n    kilo: PropTypes.string.isRequired,\n    mega: PropTypes.string.isRequired,\n    giga: PropTypes.string.isRequired,\n    tera: PropTypes.string.isRequired,\n    peta: PropTypes.string.isRequired,\n    exa: PropTypes.string.isRequired,\n    zetta: PropTypes.string.isRequired\n  }).isRequired,\n  iconSizes: PropTypes.shape({\n    kilo: PropTypes.string.isRequired,\n    mega: PropTypes.string.isRequired\n  }),\n  borderRadius: PropTypes.shape({\n    kilo: PropTypes.string,\n    mega: PropTypes.string,\n    giga: PropTypes.string\n  }).isRequired,\n  typography: PropTypes.shape({\n    headings: PropTypes.shape({\n      kilo: typePropType,\n      mega: typePropType,\n      giga: typePropType,\n      tera: typePropType,\n      peta: typePropType,\n      exa: typePropType,\n      zetta: typePropType\n    }).isRequired,\n    subHeadings: PropTypes.shape({\n      kilo: typePropType,\n      mega: typePropType\n    }).isRequired,\n    text: PropTypes.shape({\n      kilo: typePropType,\n      mega: typePropType,\n      giga: typePropType\n    }).isRequired\n  }),\n  fontStack: PropTypes.shape({\n    default: PropTypes.string,\n    mono: PropTypes.string\n  }),\n  fontWeight: PropTypes.shape({\n    regular: PropTypes.string.isRequired,\n    bold: PropTypes.string.isRequired\n  }).isRequired\n});\n\nexport const localePropType = isRequired => (\n  props,\n  propName,\n  componentName\n) => {\n  // eslint-disable-next-line react/destructuring-assignment\n  const prop = props[propName];\n  if (isRequired && (!prop || !prop.length)) {\n    return new Error(\n      `Prop \\`${propName}\\` is marked as required in \\`${componentName}\\`,` +\n        `but received \\`${prop}\\`.`\n    );\n  }\n\n  if (!/[a-z]{2}-[A-Z]{2}/.test(prop)) {\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to` +\n        ` \\`${componentName}\\`. Validation failed.`\n    );\n  }\n\n  return null;\n};\n\nexport const positionPropType = PropTypes.oneOf([TOP, BOTTOM, LEFT, RIGHT]);\nexport const alignPropType = PropTypes.oneOf([START, END, CENTER]);\n"],"sourceRoot":""}