{"version":3,"sources":["/Users/connorbaer/Code/GitHub/circuit-ui/docs/content/styles/fonts.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_connorbaer_Code_GitHub_circuit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__","_Users_connorbaer_Code_GitHub_circuit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","mdxType","id","parentName","className","href","start","isMDXComponent"],"mappings":"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","file":"static/js/docs-content-styles-fonts.33244426.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"fonts\"\n    }}>{`Fonts`}</h1>\n    <h2 {...{\n      \"id\": \"defining-the-font-stack\"\n    }}>{`Defining the font stack`}</h2>\n    <p>{`The font stack can be configured as part of the theme. The default font stack is applied to the `}<inlineCode parentName=\"p\">{`body`}</inlineCode>{` and the mono font stack is applied to `}<inlineCode parentName=\"p\">{`pre`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{` tags. The default values are:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const fontStack = {\n  default: 'aktiv-grotesk, -apple-system, BlinkMacSystemFont, \"Segoe UI\"',\n  mono: 'Consolas, monaco, monospace'\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"loading-custom-web-fonts\"\n    }}>{`Loading custom web fonts`}</h2>\n    <p>{`There are myriads of ways to load fonts on the web. You can choose between `}<a parentName=\"p\" {...{\n        \"href\": \"https://css-tricks.com/fout-foit-foft/\"\n      }}>{`FOIT`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.zachleat.com/web/comprehensive-webfonts/#fout-class\"\n      }}>{`FOUT`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.zachleat.com/web/comprehensive-webfonts/#foft\"\n      }}>{`FOFT`}</a>{`, each with several implementation techniques.`}</p>\n    <p>{`Circuit UI does not enforce any approach. It is up to you to choose and implement your preferred one. Have a look at Zach Leatherman's `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.zachleat.com/web/comprehensive-webfonts/\"\n      }}>{`Comprehensive Guide to Font Loading Strategies`}</a>{` for inspiration.`}</p>\n    <p>{`The simplest strategy is the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.zachleat.com/web/comprehensive-webfonts/#font-face\"\n      }}>{`unceremonious font-face`}</a>{` with `}<inlineCode parentName=\"p\">{`preload`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`font-display`}</inlineCode>{`. This is the default approach recommended by `}<a parentName=\"p\" {...{\n        \"href\": \"https://fonts.google.com/\"\n      }}>{`Google Fonts`}</a>{`. Here's how you can implement it with Circuit UI:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Add the font-face(s) that you'd like to use to your global HTML `}<inlineCode parentName=\"li\">{`<head>`}</inlineCode>{`:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<link\n  rel=\"preload\"\n  href=\"font-lato/lato-regular-webfont.woff2\"\n  as=\"font\"\n  type=\"font/woff2\"\n  crossorigin\n/>\n<style>\n  @font-face {\n    font-family: Lato;\n    src: url('font-lato/lato-regular-webfont.woff2') format('woff2'), url('font-lato/lato-regular-webfont.woff')\n        format('woff');\n    font-display: swap; /* optional */\n  }\n</style>\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Update the font stack in your theme:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const fontStack = {\n  regular: '\"Lato\", sans-serif';\n};\n`}</code></pre>\n    <p>{`At SumUp, we like to use `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.zachleat.com/web/comprehensive-webfonts/#foft\"\n      }}>{`FOFT, or FOUT with Two Stage Render`}</a>{` paired with `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-preload\"\n      }}>{`Critical FOFT with preload`}</a>{`. When you opt for this approach, you will have to add some custom global styles. Here's how you can do this with Circuit UI:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Global, css } from '@emotion/core';\nimport { ThemeProvider } from 'emotion-theming';\nimport { theme } from '@sumup/circuit-ui';\n\nconst fontStyles = css\\`\n  body {\n    font-family: sans-serif;\n  }\n  body.fonts-loaded-initial {\n    font-family: 'LatoInitial', sans-serif;\n  }\n  body.fonts-loaded-full {\n    font-family: 'Lato', sans-serif;\n  }\n\\`;\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme.circuit}>\n      <Global styles={fontStyles} />\n      <p>Hello World!</p>\n    </ThemeProvider>\n  );\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}