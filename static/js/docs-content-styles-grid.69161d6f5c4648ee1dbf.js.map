{"version":3,"sources":["/Users/connorbaer/Code/GitHub/circuit-ui/docs/content/styles/components/Grid.js","/Users/connorbaer/Code/GitHub/circuit-ui/docs/content/styles/grid.mdx","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Col/constants.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Col/utils.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Col/Col.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Col/index.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Grid/Grid.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Grid/index.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Row/Row.js","/Users/connorbaer/Code/GitHub/circuit-ui/src/components/Row/index.js"],"names":["Grid","Object","styled_base_browser_esm","OriginalGrid","target","_ref","theme","css","colors","n100","Col","OriginalCol","_ref2","b500","b300","white","Row","OriginalRow","_ref3","layoutProps","MDXLayout","MDXContent","components","props","objectWithoutProperties","index_es","esm_extends","mdxType","id","parentName","index_esm","__position","__code","__scope","this","Playground","__codesandbox","Grid_Grid","Grid_Row","Grid_Col","span","href","default","mega","kilo","skip","untilKilo","isMDXComponent","isDefault","isEqual","wrapStyles","styles","breakpoint","concat","mq","createSpanStyles","grid","cols","safeSpan","clamp","createSkipStyles","safeSkip","createBreakpointStyles","curry","current","config","gutter","getBreakPointStyles","compose","values","mapValues","sortByPriority","iteratee","sort","a","b","head","priority","mapBreakpoint","fn","slicedToArray","key","value","composeBreakpoints","breakpoints","map","toPairs","getSpanStyles","isString","getSkipStyles","_ref4","baseStyles","sizingProp","PropTypes","oneOfType","object","number","string","propTypes","defaultProps","maxWidth","clearfix"],"mappings":"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","file":"static/js/docs-content-styles-grid.d750d90e.js","sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport OriginalRow from '../../../../src/components/Row';\nimport OriginalGrid from '../../../../src/components/Grid';\nimport OriginalCol from '../../../../src/components/Col';\n\nconst Grid = styled(OriginalGrid)`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.n100};\n  `};\n`;\n\nconst Col = styled(OriginalCol)`\n  ${({ theme }) => css`\n    &:nth-of-type(n) {\n      background-color: ${theme.colors.b500};\n    }\n\n    &:nth-of-type(2n) {\n      background-color: ${theme.colors.b300};\n    }\n    color: ${theme.colors.white};\n    text-align: center;\n  `};\n`;\n\nconst Row = styled(OriginalRow)`\n  ${({ theme }) => css`\n    color: ${theme.colors.white};\n  `};\n`;\n\nexport { Grid, Col, Row };\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Grid, Col, Row } from './components/Grid';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"grid\"\n    }}>{`Grid`}</h1>\n    <p>{`The grid provided by Circuit UI is a float-based grid. This is because we use\nthis grid in applications where we support older browsers, such as Android\nand iOS webviews.`}</p>\n    <p>{`If you need a pure CSS grid solution with the CSS-only version of Circuit, you\nwill need to use a third-party grid for that purpose.`}</p>\n    <h2 {...{\n      \"id\": \"static-columns\"\n    }}>{`Static columns`}</h2>\n    <p>{`Sometimes you need the same type of grid behavior on all viewports. For that\nscenario, you can use the normal `}<inlineCode parentName=\"p\">{`span`}</inlineCode>{` attribute of the grid.`}</p>\n    <Playground __position={0} __code={'<Grid>\\n  <Row>\\n    <Col span=\\\"2\\\">Col 2</Col>\\n    <Col span=\\\"2\\\">Col 2</Col>\\n    <Col span=\\\"2\\\">Col 2</Col>\\n    <Col span=\\\"2\\\">Col 2</Col>\\n    <Col span=\\\"2\\\">Col 2</Col>\\n    <Col span=\\\"2\\\">Col 2</Col>\\n  </Row>\\n  <Row>\\n    <Col span=\\\"4\\\">Col 4</Col>\\n    <Col span=\\\"4\\\">Col 4</Col>\\n    <Col span=\\\"4\\\">Col 4</Col>\\n  </Row>\\n</Grid>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Grid,\n      Col,\n      Row\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <Grid mdxType=\"Grid\">\n    <Row mdxType=\"Row\">\n      <Col span=\"2\" mdxType=\"Col\">Col 2</Col>\n      <Col span=\"2\" mdxType=\"Col\">Col 2</Col>\n      <Col span=\"2\" mdxType=\"Col\">Col 2</Col>\n      <Col span=\"2\" mdxType=\"Col\">Col 2</Col>\n      <Col span=\"2\" mdxType=\"Col\">Col 2</Col>\n      <Col span=\"2\" mdxType=\"Col\">Col 2</Col>\n    </Row>\n    <Row mdxType=\"Row\">\n      <Col span=\"4\" mdxType=\"Col\">Col 4</Col>\n      <Col span=\"4\" mdxType=\"Col\">Col 4</Col>\n      <Col span=\"4\" mdxType=\"Col\">Col 4</Col>\n    </Row>\n  </Grid>\n    </Playground>\n    <h2 {...{\n      \"id\": \"responsive-columns\"\n    }}>{`Responsive columns`}</h2>\n    <p>{`You can use the following `}<a parentName=\"p\" {...{\n        \"href\": \"/styles/media-queries\"\n      }}>{`breakpoints`}</a>{` to define the\nresponsive behavior of your grid:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`untilKilo`}</li>\n      <li parentName=\"ul\">{`kilo`}</li>\n      <li parentName=\"ul\">{`mega`}</li>\n      <li parentName=\"ul\">{`giga`}</li>\n      <li parentName=\"ul\">{`tera`}</li>\n    </ul>\n    <Playground __position={1} __code={'<Grid>\\n  <Row>\\n    <Col span={{ default: 12, mega: 3, kilo: 6 }}>Col 2</Col>\\n    <Col span={{ default: 12, mega: 3, kilo: 6 }}>Col 2</Col>\\n    <Col span={{ default: 12, mega: 3, kilo: 6 }}>Col 2</Col>\\n    <Col span={{ default: 12, mega: 3, kilo: 6 }}>Col 2</Col>\\n  </Row>\\n</Grid>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Grid,\n      Col,\n      Row\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <Grid mdxType=\"Grid\">\n    <Row mdxType=\"Row\">\n      <Col span={{\n            default: 12,\n            mega: 3,\n            kilo: 6\n          }} mdxType=\"Col\">Col 2</Col>\n      <Col span={{\n            default: 12,\n            mega: 3,\n            kilo: 6\n          }} mdxType=\"Col\">Col 2</Col>\n      <Col span={{\n            default: 12,\n            mega: 3,\n            kilo: 6\n          }} mdxType=\"Col\">Col 2</Col>\n      <Col span={{\n            default: 12,\n            mega: 3,\n            kilo: 6\n          }} mdxType=\"Col\">Col 2</Col>\n    </Row>\n  </Grid>\n    </Playground>\n    <p>{`Default refers to the smallest viewpoint.`}</p>\n    <h2 {...{\n      \"id\": \"skipping-columns\"\n    }}>{`Skipping columns`}</h2>\n    <p>{`Sometimes you want to skip a column. For that, you can use the `}<inlineCode parentName=\"p\">{`skip`}</inlineCode>{` prop on\nthe `}<inlineCode parentName=\"p\">{`Col`}</inlineCode>{` component.`}</p>\n    <Playground __position={2} __code={'<Grid>\\n  <Row>\\n    <Col span=\\\"4\\\">Col 4</Col>\\n    <Col span=\\\"4\\\" skip=\\\"4\\\">\\n      Col 4\\n    </Col>\\n  </Row>\\n</Grid>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Grid,\n      Col,\n      Row\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <Grid mdxType=\"Grid\">\n    <Row mdxType=\"Row\">\n      <Col span=\"4\" mdxType=\"Col\">Col 4</Col>\n      <Col span=\"4\" skip=\"4\" mdxType=\"Col\">\n        Col 4\n      </Col>\n    </Row>\n  </Grid>\n    </Playground>\n    <h2 {...{\n      \"id\": \"responsive-skipping\"\n    }}>{`Responsive skipping`}</h2>\n    <Playground __position={3} __code={'<Grid>\\n  <Row>\\n    <Col span=\\\"3\\\">Col 3</Col>\\n    <Col span=\\\"3\\\">Col 3</Col>\\n    <Col span=\\\"3\\\" skip={{ default: 0, untilKilo: 3 }}>\\n      skip mobile\\n    </Col>\\n  </Row>\\n</Grid>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Grid,\n      Col,\n      Row\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <Grid mdxType=\"Grid\">\n    <Row mdxType=\"Row\">\n      <Col span=\"3\" mdxType=\"Col\">Col 3</Col>\n      <Col span=\"3\" mdxType=\"Col\">Col 3</Col>\n      <Col span=\"3\" skip={{\n            default: 0,\n            untilKilo: 3\n          }} mdxType=\"Col\">\n        skip mobile\n      </Col>\n    </Row>\n  </Grid>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const MIN_COL_SPAN = 1;\nexport const MAX_COL_WIDTH = 100;\nexport const DEFAULT_BREAKPOINT = 'default';\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { css } from '@emotion/core';\n\nimport {\n  isEqual,\n  isString,\n  clamp,\n  toPairs,\n  head,\n  compose,\n  curry,\n  map,\n  mapValues,\n  values\n} from '../../util/fp';\nimport { MIN_COL_SPAN, MAX_COL_WIDTH, DEFAULT_BREAKPOINT } from './constants';\n\nexport const isDefault = isEqual(DEFAULT_BREAKPOINT);\n\nexport const wrapStyles = (styles, breakpoint, theme) =>\n  isDefault(breakpoint) ? css(styles) : `${theme.mq[breakpoint]} { ${styles} }`;\n\nexport const createSpanStyles = (grid, theme, span) => {\n  if (!grid) {\n    return null;\n  }\n\n  const { cols, breakpoint } = grid;\n  const safeSpan = clamp(MIN_COL_SPAN, cols, span);\n\n  const styles = `\n    width: ${(MAX_COL_WIDTH / cols) * safeSpan}%;\n  `;\n\n  return wrapStyles(styles, breakpoint, theme);\n};\n\nexport const createSkipStyles = (grid, theme, skip) => {\n  if (!grid) {\n    return null;\n  }\n\n  const { cols, breakpoint } = grid;\n  const safeSkip = clamp(cols * -1, cols - 1, skip);\n\n  const styles = `\n    left: ${(MAX_COL_WIDTH / cols) * safeSkip}%;\n    position: relative;\n  `;\n\n  return wrapStyles(styles, breakpoint, theme);\n};\n\nconst createBreakpointStyles = curry((theme, current) => {\n  const config = theme.grid[current.breakpoint];\n\n  if (!config) {\n    return null;\n  }\n\n  const styles = `\n    padding-left: calc(${config.gutter} / 2);\n    padding-right: calc(${config.gutter} / 2);\n  `;\n\n  return wrapStyles(styles, current.breakpoint, theme);\n});\n\n/**\n * Return the default styles for each breakpoint provided by the config\n */\nexport const getBreakPointStyles = theme =>\n  compose(\n    values,\n    mapValues(createBreakpointStyles(theme))\n  )(theme.grid);\n\n/**\n * Sort the key/value based on the breakpoint priority\n * defined on the grid config.\n */\nexport const sortByPriority = curry((grid, iteratee) =>\n  iteratee.sort((a, b) => grid[head(a)].priority >= grid[head(b)].priority)\n);\n\n/**\n * Map the provided key/value breakpoint into styles based on the grid/theme\n * config.\n */\nexport const mapBreakpoint = curry((fn, grid, theme, [key, value]) =>\n  fn(grid[key], theme, value)\n);\n\n/**\n * Compose the breakpoints object into an array of styles.\n */\nconst composeBreakpoints = curry((fn, grid, theme, breakpoints) =>\n  compose(\n    map(mapBreakpoint(fn, grid, theme)),\n    sortByPriority(grid),\n    toPairs\n  )(breakpoints)\n);\n\n/**\n * Return the styles of the span based on the provided value. If it is a string\n * returns a single style, otherwise composes the breakpoints into an array of\n * styles\n */\nexport const getSpanStyles = ({ grid, ...theme }, span) =>\n  isString(span)\n    ? createSpanStyles(grid.default, theme, span)\n    : composeBreakpoints(createSpanStyles, grid, theme, span);\n\n/**\n * Return the styles of the skip based on the provided value. If it is a string\n * returns a single style, otherwise composes the breakpoints into an array of\n * styles\n */\nexport const getSkipStyles = ({ grid, ...theme }, skip) =>\n  isString(skip)\n    ? createSkipStyles(grid.default, theme, skip)\n    : composeBreakpoints(createSkipStyles, grid, theme, skip);\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { getSpanStyles, getSkipStyles, getBreakPointStyles } from './utils';\n\nconst baseStyles = ({ theme, skip, span }) => css`\n  label: col;\n\n  box-sizing: border-box;\n  float: left;\n\n  ${getBreakPointStyles(theme)};\n  ${getSpanStyles(theme, span)};\n  ${getSkipStyles(theme, skip)};\n`;\n\n/**\n * Content wrapping for the Grid component. Allows sizing based on provided\n * props.\n */\nconst Col = styled('div')(baseStyles);\n\nconst sizingProp = PropTypes.oneOfType([\n  PropTypes.object,\n  PropTypes.number,\n  PropTypes.string\n]);\n\nCol.propTypes = {\n  /**\n   * The amount to skip for a column. If the value is a number/string it will\n   * be applied with no media query. If the value is an object it will apply\n   * each value based on the key breakpoint, IE:\n   * { untilKilo: 6 } will create a style for the untilKilo media query with a\n   * skip of 6 columns. Accepts negative values as well.\n   */\n  skip: sizingProp,\n  /**\n   * The amount to span for a column. If the value is a number/string it will\n   * be applied with no media query. If the value is an object it will apply\n   * each value based on the key breakpoint, IE:\n   * { untilKilo: 6 } will create a style for the untilKilo media query with a\n   * span of 6 columns.\n   */\n  span: sizingProp\n};\n\nCol.defaultProps = {\n  skip: '0',\n  span: '0'\n};\n\n/**\n * @component\n */\nexport default Col;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Col from './Col';\n\nexport default Col;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nconst getBreakPointStyles = (theme, breakpoint) => {\n  const config = theme.grid[breakpoint];\n\n  if (!config) {\n    return null;\n  }\n\n  return `${theme.mq[breakpoint]} {\n    max-width: ${config.maxWidth};\n    padding-left: calc(${config.gutter} / 2);\n    padding-right: calc(${config.gutter} / 2);\n  }`;\n};\n\nconst baseStyles = ({ theme }) => css`\n  label: grid;\n\n  margin: 0 auto;\n  width: 100%;\n\n  ${getBreakPointStyles(theme, 'untilKilo')};\n  ${getBreakPointStyles(theme, 'kilo')};\n  ${getBreakPointStyles(theme, 'mega')};\n  ${getBreakPointStyles(theme, 'giga')};\n  ${getBreakPointStyles(theme, 'afterTera')};\n`;\n\n/**\n * A basic 12-column grid component.\n */\nconst Grid = styled('div')(baseStyles);\n\n/**\n * @component\n */\nexport default Grid;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Grid from './Grid';\n\nexport default Grid;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { clearfix } from '../../styles/style-helpers';\n\nconst getBreakPointStyles = (theme, breakpoint) => {\n  const config = theme.grid[breakpoint];\n\n  if (!config) {\n    return null;\n  }\n\n  return css`\n    ${theme.mq[breakpoint]} {\n      margin-left: calc(-${config.gutter} / 2);\n      margin-right: calc(-${config.gutter} / 2);\n    }\n  `;\n};\n\nconst baseStyles = ({ theme }) => css`\n  label: row;\n\n  position: relative;\n  ${clearfix};\n\n  ${getBreakPointStyles(theme, 'untilKilo')};\n  ${getBreakPointStyles(theme, 'kilo')};\n  ${getBreakPointStyles(theme, 'mega')};\n  ${getBreakPointStyles(theme, 'giga')};\n  ${getBreakPointStyles(theme, 'tera')};\n`;\n\n/**\n * Row wrapping for the Col component.\n */\nconst Row = styled('div')(baseStyles);\n\n/**\n * @component\n */\nexport default Row;\n","/**\n * Copyright 2019, SumUp Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Row from './Row';\n\nexport default Row;\n"],"sourceRoot":""}